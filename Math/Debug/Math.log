  Math.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory0(819): warning C4244: 'initializing': conversion from '_Ty' to '_Objty', possible loss of data
          with
          [
              _Ty=__int64
          ]
          and
          [
              _Objty=double
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory(141): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,__int64&>(_Alloc &,_Objty *const ,__int64 &)' being compiled
          with
          [
              _Alloc=std::allocator<double>,
              _Ty=double,
              _Objty=double
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory(142): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,__int64&>(_Alloc &,_Objty *const ,__int64 &)' being compiled
          with
          [
              _Alloc=std::allocator<double>,
              _Ty=double,
              _Objty=double
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory(173): note: see reference to function template instantiation 'void std::_Uninitialized_backout_al<_Ty *,_Alloc>::_Emplace_back<__int64&>(__int64 &)' being compiled
          with
          [
              _Ty=double,
              _Alloc=std::allocator<double>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory(173): note: see reference to function template instantiation 'void std::_Uninitialized_backout_al<_Ty *,_Alloc>::_Emplace_back<__int64&>(__int64 &)' being compiled
          with
          [
              _Ty=double,
              _Alloc=std::allocator<double>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(1444): note: see reference to function template instantiation '_NoThrowFwdIt *std::_Uninitialized_copy<_Iter,double*,std::allocator<_Ty>>(const _InIt,const _InIt,_NoThrowFwdIt,_Alloc &)' being compiled
          with
          [
              _NoThrowFwdIt=double *,
              _Iter=__int64 *,
              _Ty=double,
              _InIt=__int64 *,
              _Alloc=std::allocator<double>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(432): note: see reference to function template instantiation 'double *std::vector<double,std::allocator<_Ty>>::_Ucopy<_Iter>(_Iter,_Iter,double *)' being compiled
          with
          [
              _Ty=double,
              _Iter=__int64 *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(432): note: see reference to function template instantiation 'double *std::vector<double,std::allocator<_Ty>>::_Ucopy<_Iter>(_Iter,_Iter,double *)' being compiled
          with
          [
              _Ty=double,
              _Iter=__int64 *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(444): note: see reference to function template instantiation 'void std::vector<double,std::allocator<_Ty>>::_Range_construct_or_tidy<__int64*>(_Iter,_Iter,std::forward_iterator_tag)' being compiled
          with
          [
              _Ty=double,
              _Iter=__int64 *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(444): note: see reference to function template instantiation 'void std::vector<double,std::allocator<_Ty>>::_Range_construct_or_tidy<__int64*>(_Iter,_Iter,std::forward_iterator_tag)' being compiled
          with
          [
              _Ty=double,
              _Iter=__int64 *
          ]
  C:\Users\tim\source\repos\Math\Math.cpp(163): note: see reference to function template instantiation 'std::vector<double,std::allocator<_Ty>>::vector<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<__int64>>>,void>(_Iter,_Iter,const _Alloc &)' being compiled
          with
          [
              _Ty=double,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int64_t>>>,
              _Alloc=std::allocator<double>
          ]
  C:\Users\tim\source\repos\Math\Math.cpp(163): note: see reference to function template instantiation 'std::vector<double,std::allocator<_Ty>>::vector<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<__int64>>>,void>(_Iter,_Iter,const _Alloc &)' being compiled
          with
          [
              _Ty=double,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int64_t>>>,
              _Alloc=std::allocator<double>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono(595): note: see reference to class template instantiation 'std::chrono::duration<double,std::ratio<1,1>>' being compiled
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono(172): note: see reference to class template instantiation 'std::chrono::duration<__int64,std::nano>' being compiled
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\chrono(574): note: see reference to class template instantiation 'std::chrono::time_point<std::chrono::steady_clock,std::chrono::steady_clock::duration>' being compiled
  Math.vcxproj -> C:\Users\tim\source\repos\Math\Debug\Math.exe
